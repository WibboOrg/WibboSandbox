generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CatalogItem {
  id              Int                       @id @default(autoincrement()) @db.UnsignedInt
  page_id         Int                       @db.UnsignedInt
  item_id         Int                       @db.UnsignedInt
  catalog_name    String                    @db.VarChar(100)
  cost_credits    Int                       @default(3) @db.UnsignedInt
  cost_pixels     Int                       @default(0) @db.UnsignedInt
  cost_diamonds   Int                       @default(0) @db.UnsignedInt
  cost_limitcoins Int                       @default(0) @db.UnsignedInt
  amount          Int                       @default(1) @db.UnsignedInt
  offer_active    Boolean                   @default(true)
  badge           String                    @default("") @db.VarChar(255)

  @@index([item_id], map: "item_ids")
  @@index([page_id], map: "page_id")
  @@map("catalog_item")
}

model CatalogItemLimited {
  catalog_item_id Int @id @db.UnsignedInt
  limited_sells   Int @default(0)
  limited_stack   Int @default(0)

  @@map("catalog_item_limited")
}

model CatalogPage {
  id             Int                     @id @default(autoincrement()) @db.UnsignedInt
  parent_id      Int                     @default(-1)
  caption        String                  @db.VarChar(100)
  icon_image     Int                     @default(1) @db.UnsignedInt
  enabled        Boolean                 @default(true)
  min_rank       Int                     @default(1) @db.UnsignedInt
  required_right String                  @default("") @db.VarChar(50)
  order_num      Int                     @default(0)
  page_layout    String                  @default("default_3x3") @db.VarChar(50)
  page_link      String                  @default("") @db.VarChar(255)
  page_strings_1 String                  @default("wibbo|catalog_base") @db.VarChar(255)
  page_strings_2 String                  @db.Text
  is_premium     Boolean                 @default(false)

  @@index([order_num], map: "order_num")
  @@map("catalog_page")
}

model EmulatorCommand {
  id             Int     @id @default(autoincrement()) @db.UnsignedInt
  input          String  @db.VarChar(100)
  minrank        Int
  description_fr String? @db.MediumText
  description_en String? @db.MediumText
  description_br String? @db.MediumText

  @@map("emulator_command")
}

model EmulatorEffect {
  id         Int                        @id @db.UnsignedInt
  only_staff Boolean                    @default(false)

  @@map("emulator_effect")
}

model EmulatorText {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  identifiant String  @unique @db.VarChar(200)
  value_fr    String? @db.Text
  value_en    String? @db.Text
  value_br    String? @db.Text

  @@map("emulator_text")
}

model ItemBase {
  id                      Int                              @id @default(autoincrement()) @db.UnsignedInt
  item_name               String                           @db.VarChar(100)
  type                    item_base_type                   @default(s)
  width                   Int                              @default(1) @db.UnsignedInt
  length                  Int                              @default(1) @db.UnsignedInt
  stack_height            Float                            @default(1)
  can_stack               Boolean                          @default(true)
  can_sit                 Boolean                          @default(false)
  is_walkable             Boolean                          @default(false)
  sprite_id               Int                              @db.UnsignedInt
  allow_recycle           Boolean                          @default(false)
  allow_trade             Boolean                          @default(true)
  allow_marketplace_sell  Boolean                          @default(false)
  allow_gift              Boolean                          @default(true)
  allow_inventory_stack   Boolean                          @default(true)
  interaction_type        String                           @default("default") @db.VarChar(255)
  interaction_modes_count Int                              @default(1) @db.UnsignedInt
  vending_ids             String                           @default("0") @db.VarChar(100)
  height_adjustable       String                           @default("0") @db.VarChar(100)
  effect_id               Int                              @default(0) @db.UnsignedInt
  is_rare                 Boolean                          @default(false)
  rarity_level            Int                              @default(0)

  @@index([sprite_id], map: "sprite_id")
  @@map("item_base")
}

model User {
  id                     Int                         @id @default(autoincrement()) @db.UnsignedInt
  username               String                      @unique(map: "username") @db.VarChar(50)
  password               String                      @db.VarChar(255)
  mail                   String?                     @default("") @db.VarChar(100)
  auth_ticket            String?                     @default("") @db.VarChar(100)
  rank                   Int                         @default(1) @db.UnsignedInt
  credits                Int                         @default(50000) @db.UnsignedInt
  activity_points        Int                         @default(0) @db.UnsignedInt
  look                   String                      @default("hr-115-42.hd-190-1.ch-215-62.lg-285-91.sh-290-62") @db.VarChar(250)
  gender                 user_gender                 @default(M)
  motto                  String?                     @default("") @db.VarChar(50)
  account_created        Int                         @default(0) @db.UnsignedInt
  last_online            Int                         @default(0) @db.UnsignedInt
  online                 Boolean                     @default(false)
  ip_last                String?                     @default("") @db.VarChar(120)
  machine_id             String?                     @default("") @db.VarChar(100)
  home_room              Int                         @default(0) @db.UnsignedInt
  block_newfriends       Boolean                     @default(false)
  hide_online            Boolean                     @default(false)
  hide_inroom            Boolean                     @default(false)
  last_offline           Int                         @default(0) @db.UnsignedInt
  jetons                 Int                         @default(0) @db.UnsignedInt
  mois_vip               Int                         @default(0) @db.UnsignedInt
  volume                 String                      @default("100,100,100") @db.VarChar(11)
  vip_points             Int                         @default(0) @db.UnsignedInt
  limit_coins            Int                         @default(0) @db.UnsignedInt
  accept_trading         Boolean                     @default(true)
  camera_follow_disabled Boolean                     @default(false)
  ignore_room_invite     Boolean                     @default(false)
  lastdailycredits       String                      @default("00/00") @db.VarChar(10)
  hide_gamealert         Boolean                     @default(false)
  ipcountry              String?                     @default("") @db.VarChar(2)
  game_points            Int                         @default(0) @db.UnsignedInt
  game_points_month      Int                         @default(0) @db.UnsignedInt
  mazoscore              Int                         @default(0) @db.UnsignedInt
  mazo                   Int                         @default(0) @db.UnsignedInt
  nux_enable             Boolean                     @default(true)
  langue                 user_langue                 @default(fr)
  run_points             Int                         @default(0) @db.UnsignedInt
  run_points_month       Int                         @default(0) @db.UnsignedInt
  is_banned              Boolean                     @default(false)
  log_sandbox            LogSandbox[]

  @@index([auth_ticket], map: "auth_ticket")
  @@index([game_points], map: "gamepoint")
  @@index([game_points_month], map: "gamepoint_mouth")
  @@index([ip_last], map: "ip_last")
  @@index([jetons], map: "jetons")
  @@index([mail], map: "mail")
  @@index([mazo], map: "mazo")
  @@index([mazoscore], map: "mazoscore")
  @@index([vip_points], map: "vip_points")
  @@map("user")
}

model LogSandbox {
  id                Int    @id @default(autoincrement()) @db.UnsignedInt
  user_id           Int    @db.UnsignedInt
  method            String @db.VarChar(10)
  edit_name         String @db.VarChar(20)
  edit_key          String @db.VarChar(200)
  timestamp_created Int
  user              User   @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "log_sandbox_ibfk_1")

  @@index([user_id], map: "user_id")
  @@map("log_sandbox")
}

enum item_base_type {
  s
  i
  p
  r
}

enum user_langue {
  fr
  br
  en
}

enum user_gender {
  M
  F
}